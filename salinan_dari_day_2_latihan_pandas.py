# -*- coding: utf-8 -*-
"""Salinan dari Day 2 - Latihan Pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/127LGql59HLTbrTjiwUgljS56fqvefBwS

# Latihan 1
"""

#gunakan url file ini untuk menjawab latihan part 1
link_boston = "https://github.com/mofdac/-materi-das/blob/main/01.%20Python%20for%20DA/latihan/Boston_Housing.xlsx?raw=true"

import pandas as pd 
#silahkan di import package lain jika diperlukan



"""## 1. Tampilkan Informasi Statistik Seperti Mean, Median,Std, dll dari dataset diatas """

data = pd.read_excel(link_boston)
data.describe()

"""## 2. Apa saja tipe data yang ada dari dataframe diatas """

data.info()

"""## 3.  Terdapat Berapa Kolom di data diatas ? """

data.shape

"""## 4. Kolom manakah yang memiliki keberagaman paling tinggi ? """

data.nunique()

"""## 5. Buatlah DataFrame baru dari data diatas, dengan ketentuan ambil baris dengan nilai kolom "CRIM" 10 Terbesar. Tampilkan hanya Kolom "DIS,MEDV, dan LSTAT" saja """

# data[['DIS','MEDV','LSTAT']]
# data.sort_values(by='CRIM', ascending=False)[['CRIM','DIS','MEDV','LSTAT']][:10]
data.sort_values(by='CRIM', ascending=False)[['DIS','MEDV','LSTAT']][:10]

"""# Latihan 2 
Sumber data : Sales_June_2019.csv dan Sales_July_2019.csv 
"""

sales_june = "https://raw.githubusercontent.com/mofdac/-materi-das/main/01.%20Python%20for%20DA/latihan/Sales_June_2019.csv?raw=true"
sales_july = "https://github.com/mofdac/-materi-das/blob/main/01.%20Python%20for%20DA/latihan/Sales_July_2019.csv?raw=true"

"""## 6. Gabungkan kedua data diatas """

juni = pd.read_csv(sales_june)
juli = pd.read_csv(sales_july)
# print(juni.describe())
# print(juli.describe())
# print(juni)
# print(juli)
gabung = pd.concat([juni, juli], ignore_index=True)
gabung

"""## 7.  Tanggal berapakah Sales Tertinggi (Nilai Jual) pada Bulan Juni dan Juli

"""

import datetime as dt
# backup data
# data = juni.copy()
data = gabung.copy()

# print(gabung_backup.shape)

# select data sampah
# data_yang_akan_dihapus = data[data.Product == "Product"]
# print(data_yang_akan_dihapus.shape)

#select data bersih
data_clean = data[data["Order Date"] != "Order Date"]
# print(data_clean.shape)

#cleansing kolom Quantity Ordered dari Float dan NaN
data_clean = data_clean[data_clean['Quantity Ordered'].notna()]
# data_clean = data_clean[data_clean['Quantity Ordered'].isna()]
# data_clean



#cleansing kolom Quantity Ordered dari Float

#rubah type data
data_clean['Quantity Ordered'] = data_clean['Quantity Ordered'].astype('float')
data_clean["Order Date"] = pd.to_datetime(data_clean["Order Date"])


#tambah kolom bulan
data_clean["bulan"] = data_clean['Order Date'].dt.month
# df['month'] = df['ArrivalDate'].dt.month

# data_clean
# data_clean
# data_clean.info() 
#potong Order Date
data_clean['Order Date'] = data_clean['Order Date'].dt.strftime('%Y-%m-%d')
# data_clean
#group by tanggal
data_clean_juni = data_clean.query('bulan == 6')
data_clean_juli = data_clean.query('bulan == 7')

#urutkan dan select kolom
order_juni = data_clean_juni[["Order Date","bulan","Quantity Ordered"]].sort_values(["bulan", "Quantity Ordered"], ascending = (True, False))
# cek = order_juni
# print(cek.describe())
order_tertinggi = gabung.sort_values(by='Quantity Ordered', ascending=False)
order_juni[:5]

#urutkan dan select kolom
order_juli = data_clean_juli[["Order Date","bulan","Quantity Ordered"]].sort_values(["bulan", "Quantity Ordered"], ascending = (True, False))

# order_tertinggi = gabung.sort_values(by='Quantity Ordered', ascending=False)
# order_juli[:5]


data_clean = pd.concat([order_juni[:1], order_juli[:1]], ignore_index=True)
data_clean

"""## 8. Tampilkan 10 produk dengan Nilai Penjualan Tertinggi Juni s.d. Juli """

# backup data
data = gabung.copy()
# print(gabung_backup.shape)

# select data sampah
data_yang_akan_dihapus = data[data.Product == "Product"]
# print(data_yang_akan_dihapus.shape)

#select data bersih
data_clean = data[data.Product != "Product"]
# print(data_clean.shape)

#cleansing kolom Quantity Ordered dari Float dan NaN
data_clean = data_clean[data_clean['Quantity Ordered'].notna()]
# data_clean = data_clean[data_clean['Quantity Ordered'].isna()]
# data_clean


#cleansing kolom Quantity Ordered dari Float

#rubah type data
data_clean['Quantity Ordered'] = data_clean['Quantity Ordered'].astype('float')
data_clean['Price Each'] = data_clean['Price Each'].astype('float')

# data_clean
# data_clean.info()
#potong Order Date
data_clean['Order Date'] = data_clean['Order Date'].str[:8]

#tambah kolom Nilai Penjualan
data_clean["Nilai Penjualan"] = data_clean['Quantity Ordered'] * data_clean['Price Each']

# data_clean
#group by tanggal
data_clean = data_clean.groupby(['Product'])["Nilai Penjualan"].sum().reset_index()
# data_clean

#reset index
# data_clean.reset_index()
# data_clean
#urutkan dan select kolom
order_tertinggi = data_clean[["Product","Nilai Penjualan"]].sort_values(by='Nilai Penjualan', ascending=False)

# order_tertinggi = gabung.sort_values(by='Quantity Ordered', ascending=False)
print(order_tertinggi[:10])
simpan = order_tertinggi[:10]

"""## 9. Tampilkan 10 Kota Dengan Order terbanyak Juni s.d. Juli"""

# backup data
data = gabung.copy()
# print(gabung_backup.shape)

# select data sampah
data_yang_akan_dihapus = data[data.Product == "Product"]
# print(data_yang_akan_dihapus.shape)

#select data bersih
data_clean = data[data.Product != "Product"]
# print(data_clean.shape)

#cleansing kolom Quantity Ordered dari Float dan NaN
data_clean = data_clean[data_clean['Quantity Ordered'].notna()]
# data_clean = data_clean[data_clean['Quantity Ordered'].isna()]
# data_clean


#cleansing kolom Quantity Ordered dari Float

#rubah type data
data_clean['Quantity Ordered'] = data_clean['Quantity Ordered'].astype('float')

# data_clean
# data_clean.info()
#potong Order Date
data_clean[['Purchase Address','Kota','Negara Bagian']] = data_clean['Purchase Address'].str.split(',',expand=True).replace(" ","")
# data_clean
#group by tanggal
data_clean = data_clean.groupby(['Kota'])["Quantity Ordered"].sum().reset_index()
data_clean

# #reset index
# # data_clean.reset_index()
# # data_clean
# #urutkan dan select kolom
order_tertinggi = data_clean[["Kota","Quantity Ordered"]].sort_values(by='Quantity Ordered', ascending=False)

# # order_tertinggi = gabung.sort_values(by='Quantity Ordered', ascending=False)
order_tertinggi[:10]

"""## 10. Simpan Data yang sudah difilter pada no 8 menjadi file excel baru """

simpan.to_excel('ProdukPenjualanTertinggi.xlsx',sheet_name='Penjualan',index=False)